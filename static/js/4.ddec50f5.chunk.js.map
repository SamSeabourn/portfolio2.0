{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","images/work_images/slinky_2.jpg","images/icons/icon_github2.svg","images/icons/icon_github2_dark.svg","images/icons/icon_url.svg","images/icons/icon_url_dark.svg","images/work_images/slinky_1.jpg","images/work_images/exactdocs_1.jpg","images/work_images/exactdocs_2.jpg","images/work_images/exactdocs_3.jpg","images/work_images/demo_gb1.jpg","images/work_images/demo_gb2.jpg","images/work_images/demo_gb3.jpg","components/Button.js","components/Project.js","components/ProjectPanel.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","module","exports","Button","props","nightMode","linkUrl","linkText","darkIcon","lightIcon","icon","onClick","window","open","style","color","transition","alt","src","setTextColor","lineHeight","Project","imageUrls","writeUp","keyWords","projectName","githubUrl","youtubeUrl","urls","writeUpText","split","imgElement","React","useRef","iFrameElement","projectContainer","sliderSettings","dots","speed","slidesToShow","slidesToScroll","arrows","infinite","sizes","useState","size","setSize","iframeSize","setIframeSize","useLayoutEffect","updateSize","innerWidth","innerHeight","imageElement","document","getElementsByClassName","width","height","addEventListener","removeEventListener","useWindowSize","windowWidth","iframeHeight","iframeWidth","i","length","push","urlButton","LinkIcon","LinkIconDark","githubButton","GithubIcon2","GithubIcon2Dark","youtubeDemo","ref","title","className","allow","volume","srcDoc","onLoad","element","current","guid","_p8","s","p","Math","random","toString","substr","background","map","word","includes","textAlign","margin","url","view","MyWorkPanel","SlinkyImage1","SlinkyImage2","SlinkyImage3","ExactDocsImage1","ExactDocsImage2","ExactDocsImage3","demoGBImage1","demoGBImage2","demoGBImage3"],"mappings":"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","file":"static/js/4.ddec50f5.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","module.exports = __webpack_public_path__ + \"static/media/slinky_2.40623037.jpg\";","module.exports = __webpack_public_path__ + \"static/media/icon_github2.747c1770.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon_github2_dark.b3350ace.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon_url.c3e49e58.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon_url_dark.d4ffc632.svg\";","module.exports = __webpack_public_path__ + \"static/media/slinky_1.0ab8527a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/exactdocs_1.1b433a04.jpg\";","module.exports = __webpack_public_path__ + \"static/media/exactdocs_2.457d4b18.jpg\";","module.exports = __webpack_public_path__ + \"static/media/exactdocs_3.c9d12c6f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/demo_gb1.c7490838.jpg\";","module.exports = __webpack_public_path__ + \"static/media/demo_gb2.1e8e6947.jpg\";","module.exports = __webpack_public_path__ + \"static/media/demo_gb3.819e6f8c.jpg\";","import React from 'react';\n\nconst setTextColor = (nightMode) => {\n  if (nightMode) {\n    return { \n      color: \"#fff\",\n      transition: \"0.2s ease-in\"\n    }\n  } else {\n    return { \n      color: \"#202536\",\n      transition: \"0.2s ease-in\",\n    }\n  }\n}\n\nconst Button = ( props ) => {\n  const { linkUrl, linkText , darkIcon, lightIcon } = props \n\n  const icon = props.nightMode? lightIcon : darkIcon\n\n  const openUrl = () => {\n    window.open(linkUrl, \"_blank\");\n  }\n  return(\n    <button onClick={ openUrl } style={ setTextColor(props.nightMode) }>\n      <img alt={ icon } src={ icon }></img>\n      { linkText } \n    </button>\n  )\n}\n\nexport default Button;","import React, { useLayoutEffect, useState } from 'react';\nimport Button from './Button'\nimport Slider from 'react-slick'\nimport GithubIcon2 from '../images/icons/icon_github2.svg'\nimport GithubIcon2Dark from '../images/icons/icon_github2_dark.svg'\nimport LinkIcon from '../images/icons/icon_url.svg'\nimport LinkIconDark from '../images/icons/icon_url_dark.svg'\n\nconst setTitleColor = (nightMode) => {\n  if (nightMode) {\n    return { \n      color: \"#fff\", \n      transition: \"0.5s ease-in\",\n    }\n  } else {\n    return { \n      color: \"rgb(32, 37, 54)\", \n      transition: \"0.5s ease-in\"\n    }\n  }\n}\n\nconst setTextColor = (nightMode) => {\n  if (nightMode) {\n    return { \n      color: \"#fff\", \n      transition: \"0.5s ease-in\",\n      lineHeight: \"1.5em\"\n    }\n  } else {\n    return { \n      color: \"rgba(32, 37, 54)\", \n      transition: \"0.5s ease-in\",\n      lineHeight: \"1.5em\"\n    }\n  }\n}\n\nconst setBackgroundColor = (nightMode) => {\n  if (nightMode) {\n    return { \n      background: \"rgba(56, 65, 93, 0.25)\", \n      transition: \"0.5s ease-in\"\n    }\n  } else {\n    return { \n      background: \"rgba(255,255,255,0.8)\", \n      transition: \"0.5s ease-in\"\n    }\n  }\n}\n\nconst Project = ( props ) => {\n  const { imageUrls, writeUp, keyWords, projectName, githubUrl, linkText, linkUrl, youtubeUrl } = props;\n  const urls = [];\n  const writeUpText = writeUp.split(' ');\n  const imgElement = React.useRef(null);\n  const iFrameElement = React.useRef(null);\n  const projectContainer = React.useRef(null)\n  const sliderSettings = {\n    dots: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    arrows: false,\n    infinite: false,\n    arrows: false\n  };\n\n  //Custom hook to listen to resize and update iframe dimensions\n  function useWindowSize() {\n    const [ size , setSize ] = useState([0, 0]);\n    const [ iframeSize, setIframeSize ] = useState([10,10]);\n    useLayoutEffect(() => {\n      function updateSize() {\n        setSize([window.innerWidth, window.innerHeight]);\n        var imageElement = document.getElementsByClassName('slider-image')[0]\n        setIframeSize([ imageElement.width, imageElement.height ])\n      }\n      window.addEventListener('resize', updateSize);\n      updateSize();\n      return () => window.removeEventListener('resize', updateSize);\n    }, []);\n    return [size, iframeSize]\n  }\n\n  let sizes = useWindowSize()\n  let windowWidth = sizes[0][0]\n  let iframeHeight  = sizes[1][1]\n  let iframeWidth = sizes[1][0]\n\n  for (let i = 0; i < imageUrls.length; i++) {\n    urls.push({ key: i , value: `${imageUrls[i]}` })\n  }\n\n  const urlButton = () => {\n    if (typeof linkUrl !== 'undefined'){\n      return (\n        <Button \n        nightMode={ props.nightMode } \n        linkText={ linkText } \n        linkUrl={ linkUrl } \n        lightIcon={ LinkIcon } \n        darkIcon={ LinkIconDark }\n        />\n      )\n    } \n  }\n\n  const githubButton = () => {\n    if (typeof githubUrl !== 'undefined'){\n      return (\n        <Button \n        nightMode={ props.nightMode } \n        linkText=\"Github\" \n        linkUrl={ githubUrl } \n        lightIcon={ GithubIcon2 } \n        darkIcon={ GithubIcon2Dark }\n        />\n      ) \n    } \n  }\n\n  const youtubeDemo = () => {\n    if (typeof youtubeUrl !== 'undefined') return(\n        <iframe \n          ref={ iFrameElement } \n          width={ iframeWidth }\n          height={ iframeHeight }\n          alt={ `link to ${ youtubeUrl }`}\n          title={youtubeUrl}\n          className=\"slider-video\" \n          allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n          volume=\"0\" \n          srcDoc={`<style>*{padding:0;margin:0;overflow:hidden}html,body{height:100%}img,span{position:absolute;width:100%;top:0;bottom:0;margin:auto}span{height:1.5em;text-align:center;font:48px/1.5 sans-serif;color:white;text-shadow:0 0 0.5em black}</style><a href=${youtubeUrl}?autoplay=1%mute=1><img src=${ urls[0].value }><span> ▶ </span></a>` }\n          src={ `${ youtubeUrl }autoplay=1%mute=1` } \n          onLoad={ () => setIframeSize() }>\n        </iframe>\n    )\n  }\n\n  const setIframeSize = (element) => {\n    if (element != null) {\n      element.height = imgElement.current.height;\n      element.width = imgElement.current.width;\n    }\n  }\n\n  const guid = () => {  //React warning says that eveything needs a key as it could be breaking in the future\n    function _p8(s) {  \n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);  \n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;  \n    }  \n    return _p8() + _p8(true) + _p8(true) + _p8();  \n  } \n\n  const view = () => {\n    if (windowWidth >= 1280) {\n      return (\n        //Big Screen\n        <div className=\"project-columns\">\n          <div className=\"project-text\">\n            <h2 className=\"project-title\" style={ setTitleColor(props.nightMode) }> { projectName } </h2>\n            <p style={ setTextColor(props.nightMode) }>\n              { writeUpText.map( ( word ) => { return keyWords.includes(word)? <strong key={ guid() } >{ `${word} ` }</strong> : `${word} ` })}\n            </p>\n            <section style={{ textAlign: \"left\" , margin: \"0em 2em 0em -0.5em\"}} >\n              { githubButton() }\n              { urlButton() }\n            </section>\n          </div>\n          <div className=\"slider-images\">\n            <Slider {...sliderSettings}>\n              { urls.map( ( url ) => { return <img ref={ imgElement } onLoad={ () =>  setIframeSize( iFrameElement.current ) } className=\"slider-image\" src={ url.value } alt={\"slider\" } key={ guid() }></img> }) }\n              { youtubeDemo() }\n            </Slider>\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        // Little Screen\n        <div className=\"project-columns\">\n          <div className=\"slider-images\">\n            <Slider {...sliderSettings}>\n              { urls.map( ( url ) => { return <img ref={ imgElement } className=\"slider-image\" src={ url.value } alt={\"slider\" } key={ guid() }></img> }) }\n              { youtubeDemo() }\n            </Slider>\n          </div>\n          <div className=\"project-row \" onLoad={ () =>  setIframeSize(iFrameElement.current) }>\n            <p className=\"project-text\" style={ setTextColor(props.nightMode) }>\n              { writeUpText.map( ( word ) => { return keyWords.includes(word)? <strong key={ guid() } >{ `${ word } ` }</strong> : `${ word } ` })}\n            </p>\n            <section style={{ margin: \"0 0 3em 0\" }}>\n              { githubButton() }\n              { urlButton() }\n            </section> \n             \n        </div>\n      </div>\n      )\n    }\n  }\n\n  return (\n    <div ref={ projectContainer } className=\"project\" style={ setBackgroundColor(props.nightMode) }>\n      { view() }\n    </div>\n  )\n}\n\nexport default Project;","import React from 'react'\nimport Project from './Project'\nimport SlinkyImage1 from '../images/work_images/slinky_1.jpg'\nimport SlinkyImage2 from '../images/work_images/slinky_2.jpg'\nimport SlinkyImage3 from '../images/work_images/slinky_2.jpg'\nimport ExactDocsImage1 from '../images/work_images/exactdocs_1.jpg'\nimport ExactDocsImage2 from '../images/work_images/exactdocs_2.jpg'\nimport ExactDocsImage3 from '../images/work_images/exactdocs_3.jpg'\nimport demoGBImage1 from '../images/work_images/demo_gb1.jpg'\nimport demoGBImage2 from '../images/work_images/demo_gb2.jpg'\nimport demoGBImage3 from '../images/work_images/demo_gb3.jpg'\n\nconst MyWorkPanel = (props) => {\n    return (\n        <div className=\"project-panel\" style={{ background: \"rgba(0,0,0,0)\"}}>\n          <h2 className=\"text-gradient\"> My Work.</h2>\n          <Project\n            nightMode={ props.nightMode }\n            projectName={ \"Slinky\" }\n            linkText={\"Chrome Web Store\"}\n            linkUrl={ \"https://chrome.google.com/webstore/detail/oiabgomphebmcdglaoppphombggcdbpg/publish-accepted?authuser=0&hl=en-GB\"}\n            githubUrl={\"https://github.com/SamSeabourn/Slinky\"}\n            imageUrls={ [SlinkyImage1, SlinkyImage2, SlinkyImage3 ] }\n            youtubeUrl={ \"https://www.youtube.com/embed/CtrtrZHS5q8\" }\n            keyWords={ [\"Firebase's\", \"React\", \"Slinky\", \"Chrome\", \"Extension\" ] }\n            writeUp={\n              \"Slinky is a Chrome Extension designed to manage and search though bookmarks with hotkeys and hashtags. This application is built with React using a custom webpack and utilizes Firebase's live database and anoynmous authentication to deliver a faster alternative to vanilla bookmarking.\"}\n          />\n          <Project\n            nightMode={ props.nightMode }\n            projectName={ \"ExactDocs\" }\n            linkText={\"ExactDocs.com\"}\n            linkUrl={ \"https://exactdocs.com/\"}\n            imageUrls={ [ExactDocsImage1, ExactDocsImage2, ExactDocsImage3] }\n            keyWords={ [\"ExactDocs\", \"C#\", \".Net\" ] }\n            writeUp={\n              \"With ExactDocs you can centralize and control all of your document templates and use them to generate perfectly compliant and accurate documents every time. ExactDocs is built with Microsoft .Net in C# with has been undergoing continuous product updates based on user feedback.\"}\n          />\n          <Project\n            nightMode={ props.nightMode }\n            projectName={ \"DemoGB\" }\n            linkText={\"DemoGB\"}\n            linkUrl={ \"http://www.demomygb.games/\"}\n            githubUrl={\"https://github.com/SamSeabourn/DemoGB\"}\n            imageUrls={ [demoGBImage1, demoGBImage2, demoGBImage3] }\n            youtubeUrl={ \"https://www.youtube.com/embed/5S6PauVO7To\" }\n            keyWords={ [\"Mongo.DB.\", \"Node.js,\", \"Express\", \"Server\", \"Side\", \"Rendering\"] }\n            writeUp={\n              \"DemoGB allows indy GameBoy game developers to upload and try each other's creations on a simulated 3D GameBoy in the browser. This app was built in just over a week and utlises Server Side Rendering with Express, blob storage and Mongo.DB.\"}\n          />\n        </div>\n    )\n}\n\nexport default MyWorkPanel"],"sourceRoot":""}